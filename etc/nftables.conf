#!/sbin/nft -f

### mrwizardwizard's github ###
### https://github.com/mrwizardwizard ###

# Use sudo nft flush ruleset to delete the rules (if any).
# Use sudo nft -f /etc/nftables.conf to load this file.

table netdev filter {
	chain ingress {
		type filter hook ingress device "NETDEVICE" priority -2147483648; policy drop;
		arp htype 1 arp saddr ether xx:xx:xx:xx:xx:xx arp saddr ip x.x.x.x accept
		ip frag-off & 0x1fff != 0x0 drop
#		tcp flags != ack tcp flags != 0x12 tcp flags != 0x18 drop
#		tcp sport 1-65535 accept
#		udp sport 1-65535 accept
		tcp sport { 53, 443 } accept
		udp sport 53 accept
	}

#	chain egress {
#		type filter hook egress device "NETDEVICE" priority 2147483648; policy drop;
#	}
}
#table arp filter {
#	chain input {
#		type filter hook input priority -2147483648; policy drop;
#		arp saddr ether xx:xx:xx:xx:xx:xx arp saddr ip x.x.x.x accept
#	}

#	chain output {
#		type filter hook output priority -2147483648; policy drop;
#		arp daddr ether { 00:00:00:00:00:00, ff:ff:ff:ff:ff:ff } accept
#		arp daddr ether xx:xx:xx:xx:xx:xx arp daddr ip x.x.x.x accept
#	}
#}
#table inet nat {
#	chain prerouting {
#		type nat hook prerouting priority -199; policy drop;
#	}

#	chain input {
#		type nat hook input priority -199; policy drop;
#	}

#	chain output {
#		type nat hook output priority -199; policy drop;
#	}

#	chain postrouting {
#		type nat hook postrouting priority -199; policy drop;
#		iif "eth0" masquerade random,fully-random,persistent
#		iif "wlan0" masquerade random,fully-random,persistent
#	}
#}
#table inet route {
#	chain output {
#		type route hook output priority -199; policy drop;
#	}
#}
table inet filter {
	chain prerouting {
		type filter hook prerouting priority -450; policy drop;
		fib saddr . iif oif != 0 accept
	}

	chain input {
		type filter hook input priority -200; policy drop;
		iif "lo" accept
		ct state established ct status seen-reply ct direction reply accept
	}

	chain forward {
		type filter hook forward priority -200; policy drop;
#		iif "eth0" ct state { established, new } ct direction original accept
#		iif "wlan0" ct state established ct status seen-reply ct direction reply accept
	}

#	chain output {
#		type filter hook output priority -199; policy drop;
#	}

#	chain postrouting {
#		type filter hook postrouting priority -199; policy drop;
#		oif "lo" accept
#		tcp dport { 53, 443 } accept
#		udp dport 53 accept
#	}
}
#table bridge filter {
#	chain prerouting {
#		type filter hook prerouting priority -200; policy drop;
#	}

#	chain input {
#		type filter hook input priority -200; policy drop;
#	}

#	chain forward {
#		type filter hook forward priority -200; policy drop;
#	}

#	chain output {
#		type filter hook output priority -199; policy drop;
#	}

#	chain postrouting {
#		type filter hook postrouting priority -199; policy drop;
#	}
#}
